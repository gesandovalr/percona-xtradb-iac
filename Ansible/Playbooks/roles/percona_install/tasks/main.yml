---
  - name: Disable mysql module RHEL
    shell: dnf module disable -y mysql
    ignore_errors: true

  - name: Import key for percona
    ansible.builtin.rpm_key:
      state: present
      key: https://repo.percona.com/yum/RPM-GPG-KEY-Percona
     
  - name: Install the percona repo
    ansible.builtin.dnf:
      name: 'https://repo.percona.com/yum/percona-release-latest.noarch.rpm'
      state: present
    
  - name: Setup percona Release 8.0
    shell: percona-release setup pxc-80 -y
    ignore_errors: true
    
  - name: Install percona-xtradb-cluster
    ignore_errors: true
    shell: dnf install percona-xtradb-cluster -y

  - name: Install percona-xtrabackup 80
    ignore_errors: true
    shell: dnf install percona-xtrabackup-80 -y

  - name: Enable firewall rules for percona-xtradb
    ansible.posix.firewalld:
      port: 3306/tcp
      permanent: true
      immediate: true
      state: enabled
      
  - name: Enable firewall rules for percona-xtradb
    ansible.posix.firewalld:
      port: 4444/tcp
      permanent: true
      immediate: true
      state: enabled

  - name: Enable firewall rules for percona-xtradb
    ansible.posix.firewalld:
      port: 4567/udp
      permanent: true
      immediate: true
      state: enabled

  - name: Enable firewall rules for percona-xtradb
    ansible.posix.firewalld:
      port: 4567-4568/tcp
      permanent: true
      immediate: true
      state: enabled

  - name: Enable firewall rules for percona-xtradb
    ansible.posix.firewalld:
      port: 4567-4568/tcp
      permanent: true
      immediate: true
      state: enabled

  - name: Copy certificate CA from Hashicorp
    ansible.builtin.copy:
      src: files/tls.crt
      dest: /var/lib/mysql-keyring/
      owner: mysql
      group: mysql
      mode: '0644'

  - name: restore context tls.crt file
    shell: restorecon -v /var/lib/mysql-keyring/tls.crt

  - name: initialize database on node 02/03
    shell: /usr/sbin/mysqld --initialize --user=mysql
    ignore_errors: true
    when: ansible_hostname in [var_group.percona_node_02_short_name,var_group.percona_node_03_short_name]

  - name: Ensure MYSQL Service is stopped in all nodes.
    ansible.builtin.service:
      name: mysql
      state: stopped